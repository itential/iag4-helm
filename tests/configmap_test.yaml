suite: test configmap template
templates:
  - configmap.yaml
tests:
  - it: should not render configmap when disabled
    set:
      configMap.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should render configmap when enabled
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1

  - it: should set correct metadata
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - equal:
          path: metadata.name
          value: iag-config-map

  - it: should configure port correctly
    set:
      configMap.enabled: true
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "port: 8443"

  - it: should configure bind address correctly
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "[::]"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "bind_address: \\[::\\]"

  - it: should configure server threads correctly
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 8
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "http_server_threads: 8"

  - it: should enable ansible when set to true
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "ansible_enabled: true"

  - it: should disable ansible when set to false
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: false
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "ansible_enabled: false"

  - it: should enable ansible debug when set to true
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: true
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "ansible_debug: true"

  - it: should configure custom directories correctly
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/custom/logs"
      configMap.propertiesYaml.dataDir: "/custom/data"
      configMap.propertiesYaml.customDir: "/custom/content"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "global_log_directory: '/custom/logs'"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "data_file: 'sqlite:////custom/data/automation-gateway.db'"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "/custom/content/ansible/inventory/hosts"

  - it: should enable all integrations when set to true
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: true
      configMap.propertiesYaml.enableNetmiko: true
      configMap.propertiesYaml.enableNornir: true
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: true
      configMap.propertiesYaml.enableGrpc: true
      configMap.propertiesYaml.enableGit: true
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "http_requests_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "netconf_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "netmiko_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "nornir_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "scripts_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "python_venv_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "grpc_enabled: true"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "git_enabled: true"

  - it: should disable all integrations when set to false
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: false
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: false
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: false
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - matchRegex:
          path: data["properties.yml"]
          pattern: "ansible_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "http_requests_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "netconf_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "netmiko_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "nornir_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "scripts_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "python_venv_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "grpc_enabled: false"
      - matchRegex:
          path: data["properties.yml"]
          pattern: "git_enabled: false"

  - it: should contain ansible.cfg data
    set:
      configMap.enabled: true
      configMap.propertiesYaml.port: 8080
      configMap.propertiesYaml.bindAddress: "0.0.0.0"
      configMap.propertiesYaml.serverThreads: 4
      configMap.propertiesYaml.logDir: "/var/log/automation-gateway"
      configMap.propertiesYaml.dataDir: "/var/lib/automation-gateway"
      configMap.propertiesYaml.customDir: "/usr/share/automation-gateway"
      configMap.propertiesYaml.enableAnsible: true
      configMap.propertiesYaml.ansibleDebug: false
      configMap.propertiesYaml.enableHttp: true
      configMap.propertiesYaml.enableNetconf: false
      configMap.propertiesYaml.enableNetmiko: false
      configMap.propertiesYaml.enableNornir: false
      configMap.propertiesYaml.enableScripts: true
      configMap.propertiesYaml.enablePythonVenvs: false
      configMap.propertiesYaml.enableGrpc: false
      configMap.propertiesYaml.enableGit: false
    asserts:
      - isNotNull:
          path: data["ansible.cfg"]
      - matchRegex:
          path: data["ansible.cfg"]
          pattern: "\\[defaults\\]"
      - matchRegex:
          path: data["ansible.cfg"]
          pattern: "collections_path="