# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# Default values for iag.

replicaCount: 1

applicationPort: 8443
useTLS: true

# image The Itential image to use, its version, and its location
image:
  repository: 497639811223.dkr.ecr.us-east-2.amazonaws.com/automation-gateway
  pullPolicy: IfNotPresent
  tag:

# imagePullSecrets The secrets object used to pull the image from the repo
imagePullSecrets: []

# # ServiceAccount with IRSA
serviceAccount:
  name:

issuer:
  enabled: false
  name: iag-ca-issuer
  caSecretName:

certificate:
  enabled: false
  issuerRef:
    name: iag-ca-issuer
    kind: Issuer
  renewBefore:
  duration:
  hostname:

# storageClass This is used to configure the storage class object which governs
# how the mounted volumes are created.
storageClass:
  enabled: true
  name: "iag-ebs-gp3"
  provisioner: "" # suggested ebs.csi.aws.com
  reclaimPolicy: "Retain"
  volumeBindingMode: "WaitForFirstConsumer"
  parameters:

# persistentVolumeClaims These are used for Itential Automation Gateway persistence
# and for any customer specific assets (ansible or python scripts).
persistentVolumeClaims:
  # dataClaim This represents the claim for the persistence for the sqlite data
  # required by IAG.
  enabled: true
  dataClaim:
    # storage The requested amount of storage
    storage: "10Gi"
  # codeClaim This represents the claim for the location of all the customer authored
  # scripts, ansible code, and other customizations.
  codeClaim:
    # storage The requested amount of storage
    storage: "10Gi"

# service The Kubernetes service object for this application
service:
  # type The service type
  type: "ClusterIP"
  # name The name of this Kubernetes service object
  name: "iag-service"
  # port The port that this service object is listening on
  port: 443

# ingress The Kubernetes ingress object for this application.
ingress:
  # enabled The ingress object can be disabled and will not be created with this set to false
  enabled: true
  # name The name of this Kubernetes ingress object
  name: "iag-ingress"
  # className The ingress controller class name
  className: ""
  # annotations The annotations for this ingress object. These are passed into the template
  # as is and will render the contents as you see here.
  annotations:
  # hosts The list of hosts for this ingress and their associated properties
  hosts:
    - host: "iag.example.com"
      paths:
        - path: "/"
          pathType: "Prefix"
  tls: []

certificates:
  enabled: true

statefulset:
  enabled: true

podAnnotations: {}
podLabels: {}
securityContext: {}

# podSecurityContext The pods will mount some persistent volumes. These settings
# allow for that to happen.
podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001
  runAsNonRoot: true

resourcesEnabled: true
resources:
  limits:
    cpu: "1000m"
    memory: "256Mi"
  requests:
    cpu: "1000m"
    memory: "256Mi"

# The liveness probe used to determine if the container is alive. If the liveness probe fails,
# the kubelet kills the container, and the container is subjected to its restart policy. If a
# container does not provide a liveness probe, the default state is Success. These are suggested
# values.
livenessProbe:
  enabled: false
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  path: "/api/v2.0/poll"

# The readiness probe used to determine if the container is ready to accept requests. If the
# readiness probe fails, the endpoints controller removes the podâ€™s IP address from the
# endpoints of all services that match the pod. The default state of readiness before the
# initial delay is failure. If a container does not provide a readiness probe, the default
# state is success. These are suggested values.
readinessProbe:
  readinessProbe: false
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  path: "/api/v2.0/poll"

# The startup probe used to allow some time for the application to start up. The application
# will have a maximum of 3 minutes (18 * 10 = 180s) to finish its startup. Once the startup
# probe has succeeded once, the liveness probe takes over. These are suggested values.
startupProbe:
  enabled: false
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 18
  successThreshold: 1
  path: "/api/v2.0/poll"

# propertiesYaml This is used to generate the IAG config file that the IAG
# application will use. These properties are all passed into the configmap
# which is then mounted as a file and read by the application.
configMap:
  enabled: true
  propertiesYaml:
    bindAddress: "0.0.0.0"
    serverThreads: 8
    logDir: "/var/lib/automation-gateway"
    dataDir: "/var/lib/automation-gateway"
    # LDAP configuration properties
    enableAnsible: true
    ansibleDebug: false
    customDir: "/usr/share/automation-gateway"
    enableHttp: true
    enableNetconf: true
    enableNetmiko: true
    enableNornir: true
    enableScripts: true
    enablePythonVenvs: true
    enableGrpc: true
    enableGit: true

# volumes Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector:
  itential.io/app: "iag"

tolerations:
- effect: "NoSchedule"
  key: "itential.io/role"
  operator: "Equal"
  value: "iag"

affinity: {}
